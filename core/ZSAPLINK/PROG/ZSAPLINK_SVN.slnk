<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZSAPLINK_SVN" VARCL="X" SUBC="1" RSTAT="T" RMAND="000" RLOAD="E" FIXPT="X" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="Checkin/Checkout to SVN and Build SAPLink Installer Nugget" LENGTH="58 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  Z_ZAKE_SVN_TEST
*&amp; Checkin/Checkout to SVN and Build SAPLink Installer Nugget
*&amp;---------------------------------------------------------------------*
*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   The code of this project is provided to you under the current     |
*|   version of the SAP Code Exchange Terms of Use. You can find the   |
*|   text on the SAP Code Exchange webpage at http://www.sdn.sap.com   |
*|                                                                     |
*|   SAPlink is provided to you AS IS with no guarantee, warranty or   |
*|   support.                                                          |
*\---------------------------------------------------------------------/

REPORT  zsaplink_svn.

TYPE-POOLS abap.

CONSTANTS cl_svn TYPE seoclsname VALUE &apos;ZCL_ZAKE_SVN&apos;.
CONSTANTS cl_tortoise_svn TYPE seoclsname VALUE &apos;ZCL_ZAKE_TORTOISE_SVN&apos;.

DATA package TYPE devclass.
DATA lt_packages TYPE TABLE OF devclass.
DATA zake    TYPE REF TO zake.
DATA objects TYPE scts_tadir.
DATA object  LIKE LINE OF objects.
DATA objtype TYPE string.
DATA objname TYPE string.
DATA nuggetname TYPE string.
DATA comment_str TYPE string.
DATA loclpath_str TYPE string.
DATA svnpath_str TYPE string.
DATA username_str TYPE string.
DATA password_str TYPE string.
DATA class TYPE seoclsname.
DATA files TYPE string_table.
DATA file LIKE LINE OF files.

DATA: ex TYPE REF TO zcx_saplink,
      message TYPE string.

SELECTION-SCREEN BEGIN OF BLOCK a WITH FRAME TITLE a.
PARAMETERS:
  checkout TYPE flag RADIOBUTTON GROUP act,
  update   TYPE flag RADIOBUTTON GROUP act,
  install  TYPE flag RADIOBUTTON GROUP act,
  export   TYPE flag RADIOBUTTON GROUP act DEFAULT &apos;X&apos;,
  build    TYPE flag RADIOBUTTON GROUP act,
  checkin  TYPE flag RADIOBUTTON GROUP act.
SELECTION-SCREEN END OF BLOCK a.

SELECTION-SCREEN BEGIN OF BLOCK b WITH FRAME TITLE b.
PARAMETERS:
  svn      TYPE flag RADIOBUTTON GROUP cl DEFAULT &apos;X&apos;,
  tortoise TYPE flag RADIOBUTTON GROUP cl.
SELECTION-SCREEN END OF BLOCK b.

SELECTION-SCREEN BEGIN OF BLOCK c WITH FRAME TITLE c.
PARAMETERS:
  loclpath TYPE char512 DEFAULT &apos;C:\Projects\SAPlink\trunk\core\&apos; LOWER CASE OBLIGATORY,
  nuggetna TYPE char512 DEFAULT &apos;C:\Projects\SAPlink\trunk\build\SAPlink_Daily.nugg&apos; LOWER CASE OBLIGATORY,
  svnpath  TYPE char512 DEFAULT &apos;https://code.sdn.sap.com/svn/saplink/trunk/&apos; LOWER CASE OBLIGATORY,
  revision TYPE i,
  comment  TYPE char512 DEFAULT &apos;&apos; LOWER CASE,
  testrun  TYPE flag    DEFAULT abap_true.
SELECTION-SCREEN END OF BLOCK c.

INITIALIZATION.
  a = &apos;Action&apos;.
  b = &apos;Version Controll Program&apos;.
  c = &apos;Parameters&apos;.

START-OF-SELECTION.
* Loop around the Packages which are returned for the Select Options select
  svnpath_str  = svnpath.
  loclpath_str = loclpath.
  TRY.
      IF svn = abap_true.
        class = cl_svn.
      ELSE.
        class = cl_tortoise_svn.
      ENDIF.

      CREATE OBJECT zake
        TYPE
        (class)
        EXPORTING
          i_svnpath   = svnpath_str
          i_localpath = loclpath_str
          i_username  = username_str
          i_password  = password_str.

      zake-&gt;set_package( &apos;ZSAPLINK&apos; ).
      nuggetname = nuggetna.

      &quot; Classes
      object-object   = &apos;CLAS&apos;.
      object-obj_name = &apos;ZCX_SAPLINK&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZSAPLINK&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZSAPLINK_CLASS&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZSAPLINK_NUGGET&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZSAPLINK_PROGRAM&apos;.
      APPEND object TO objects.
      &quot; Program
      object-object   = &apos;PROG&apos;.
      object-obj_name = &apos;ZSAPLINK&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZSAPLINK_SVN&apos;.
      APPEND object TO objects.
      &quot; Let add the README to the build ZIP.
      file = &apos;C:\Projects\SAPlink\trunk\build\zsaplink_installer.txt&apos;.
      APPEND file TO files.
      zake-&gt;set_checkin_objects( objects ).
      zake-&gt;add_files_to_zip( files ).

      IF checkin = abap_true.

        zake-&gt;create_slinkees( nuggetname ).

        IF testrun IS INITIAL.
          comment_str = comment.
          zake-&gt;checkin( comment_str ).
        ENDIF.
      ELSEIF export = abap_true.
        zake-&gt;download_slinkees_to_lm = abap_true.
        zake-&gt;download_nugget_to_lm   = abap_false.
        zake-&gt;download_zip_to_lm_flag = abap_false.
        zake-&gt;create_slinkees( nuggetname ).
      ELSEIF build = abap_true.
*        &quot; Fill Object Table with Slinkees from Local Machine but do not install
*        zake-&gt;install_slinkees_from_lm( i_testrun = abap_true ).
        &quot; Change package assignment of objects
        zake-&gt;set_package_of_package_objects( ).
*        &quot; Create Transport
*        zake-&gt;create_transport_request( ).
*        &quot; Add all Objects to the Transport
*        zake-&gt;add_package_objects_to_tr( ).
*        &quot; Release transport request
*        zake-&gt;release_transport_request( ).
        &quot; For the daily build we don&apos;t want to write Slinkee&apos;s
        zake-&gt;download_slinkees_to_lm = abap_false.
        &quot; Add the Nugged
        zake-&gt;download_nugget_to_lm = abap_true.
        &quot; Do not add transport to ZIP
        zake-&gt;download_transport_to_lm = abap_false.
        &quot; Write only the ZIP-File.
        zake-&gt;create_slinkees( nuggetname ).
      ELSE.
        IF update = abap_true.
          zake-&gt;update( ).
        ELSEIF checkout = abap_true.
          zake-&gt;checkout( revision ).
        ELSEIF install = abap_true.
          zake-&gt;install_slinkees_from_lm( testrun ).
          &quot; Activate objects
          IF testrun = abap_false.
            zake-&gt;activate_package_objects( ).
          ENDIF.
        ENDIF.
      ENDIF.
    CATCH zcx_saplink INTO ex.
      message = ex-&gt;get_text( ).
      IF message IS INITIAL.
        message = ex-&gt;get_longtext( ).
      ENDIF.
      WRITE: / &apos;An Error occured: &apos;, message.
  ENDTRY.</source>
</PROG>
